name: Build & test

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
      flavor:
        required: true
        type: string

concurrency:
  group: ci-${{ inputs.flavor }}-${{ inputs.arch }}-${{ github.head_ref || github.ref }}-${{ github.repository }}
  cancel-in-progress: true

jobs:
  build-iso:
    runs-on: ubuntu-latest
    env:
      FLAVOR: ${{ inputs.flavor }}
      ARCH: ${{ inputs.arch }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          git fetch --prune --unshallow
      - name: Cached ISO
        id: cache-iso
        uses: actions/cache/restore@v3
        env:
          cache-name: pr-iso-build-${{ inputs.arch }}-${{ inputs.flavor }}
          enableCrossOsArchive: true
          lookup-only: true
        with:
          path: ${{ github.workspace }}/build/*.iso
          key: ${{ env.cache-name }}-${{ hashFiles('Dockerfile', '**/go.sum', '**/pkg/**', '**/examples/**', '**/cmd/**', '**/vendor/**', '**/Makefile', '**/main.go') }}
      - if: ${{ steps.cache-iso.outputs.cache-hit != 'true' }}
        name: Build toolkit
        run: |
          make build
      - if: ${{ steps.cache-iso.outputs.cache-hit != 'true' }}
        name: Build ISO
        run: |
          make build-iso
          sudo mv build/elemental-${{ env.FLAVOR }}.${{ env.ARCH}}.iso /tmp/
      - if: ${{ steps.cache-iso.outputs.cache-hit != 'true' }}
        name: Save ISO
        id: save-iso
        uses: actions/cache/save@v3
        env:
          cache-name: pr-iso-build-${{ inputs.arch }}-${{ inputs.flavor }}
        with:
          path: /tmp/*.iso
          key: ${{ env.cache-name }}-${{ hashFiles('Dockerfile', '**/go.sum', '**/pkg/**', '**/examples/**', '**/cmd/**', '**/vendor/**', '**/Makefile', '**/main.go') }}
          enableCrossOsArchive: true

  build-disk:
    runs-on: ubuntu-latest
    env:
      FLAVOR: ${{ inputs.flavor }}
      ARCH: ${{ inputs.arch }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          git fetch --prune --unshallow
      - name: Checks cached Disk
        uses: actions/cache/restore@v3
        id: cache-check
        env:
          cache-name: pr-disk-build-${{ inputs.arch }}-${{ inputs.flavor }}
        with:
          path: /tmp/*.qcow2
          key: ${{ env.cache-name }}-${{ hashFiles('Dockerfile', '**/go.sum', '**/pkg/**', '**/examples/**', '**/cmd/**', '**/vendor/**', '**/Makefile', '**/main.go') }}
          enableCrossOsArchive: true
          lookup-only: true
      - if: ${{ steps.cache-check.outputs.cache-hit != 'true' }}
        name: Cleanup worker
        run: |
          sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
          sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
          sudo df -h
      - if: ${{ steps.cache-check.outputs.cache-hit != 'true' }}
        name: Install to disk
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends qemu-utils coreutils
          make ARCH=${{ env.ARCH }} build-os
          sudo -E make ARCH=${{ env.ARCH }} build-disk
          sudo mv build/elemental-${{ env.FLAVOR }}.${{ env.ARCH}}.qcow2 /tmp/
      - if: ${{ steps.cache-check.outputs.cache-hit != 'true' }}
        name: Save cached disk
        id: cache-disk
        uses: actions/cache/save@v3
        env:
          cache-name: pr-disk-build-${{ inputs.arch }}-${{ inputs.flavor }}
        with:
          path: /tmp/*.qcow2
          key: ${{ env.cache-name }}-${{ hashFiles('Dockerfile', '**/go.sum', '**/pkg/**', '**/examples/**', '**/cmd/**', '**/vendor/**', '**/Makefile', '**/main.go') }}
          enableCrossOsArchive: true

  tests-matrix:
    needs:
      - build-disk
    runs-on: ubuntu-latest
    env:
      FLAVOR: ${{ inputs.flavor }}
      ARCH: ${{ inputs.arch }}
      COS_TIMEOUT: 1600
    strategy:
      matrix:
        test: ['test-smoke', 'test-recovery', 'test-grubfallback', 'test-fallback', 'test-fsck', 'test-upgrade']
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
      - run: |
          git fetch --prune --unshallow
      - name: Cached Disk
        id: cache-disk
        uses: actions/cache/restore@v3
        env:
          cache-name: pr-disk-build-${{ inputs.arch }}-${{ inputs.flavor }}
        with:
          path: /tmp/*.qcow2
          key: ${{ env.cache-name }}-${{ hashFiles('Dockerfile', '**/go.sum', '**/pkg/**', '**/examples/**', '**/cmd/**', '**/vendor/**', '**/Makefile', '**/main.go') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Enable KVM group perms
        run: |
          sudo apt-get update
          sudo apt-get install qemu-utils ovmf qemu-system-x86
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Run ${{ matrix.test }}
        run: |
          make DISK=/tmp/elemental-${{ env.FLAVOR }}.${{ env.ARCH}}.qcow2 ELMNTL_TARGETARCH=${{ env.ARCH }} ELMNTL_FIRMWARE=/usr/share/OVMF/OVMF_CODE_4M.fd ${{ matrix.test }}
      # TODO include other logs SUT collects on failure
      - name: Upload serial console for ${{ matrix.test }}
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: serial-${{ env.ARCH }}-${{ env.FLAVOR }}-${{ matrix.test }}.log
          path: tests/serial.log
          if-no-files-found: error
      - name: Stop test VM
        if: always()
        run: |
          make test-clean
